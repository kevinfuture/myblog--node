/*
 @ duckJS —— A Module Loader For JavaScript
 @ version : 1.0.0
 @ author : superRaytin
 @ contact : superRaytin@163.com
 @ home : http://github.com/superRaytin/duckJS
 */
!function(window,document,undefined){var head=document.head||document.getElementsByTagName('head')[0],pagePath,rootPath,onLoadingModName,useExecuteOnce=true;var rword=/[^, ]+/g;var QueueCache={};var duckJS=function(){};var mix=function(target,provider,cover){if(cover===undefined)cover=true;for(var key in provider){var covFalse=cover===false&&!target[key];if(cover===true||covFalse){target[key]=provider[key]}};return target};mix(duckJS,{mix:mix,module:{},global:{debug:false,charset:'utf-8',alias:{}},markCache:{},config:function(option){var global=duckJS.global;if(option.constructor!=Object){throw new Error('param of config must be Object!');};duckModule.each(option,function(value,key){if(key=='alias'){duckModule.each(value,function(modUrl,modName){global.alias[modName]=modUrl})}else if(key=='base'){global[key]=duckModule.parsePath(value,global.base)}else{global[key]=value}})},STATUS:{FETCHING:1,READY:2,COMPILING:3,COMPILIED:4},log:function(content,wrapper){if(window.console){window.console.log(content)}else{wrapper=document.getElementById(wrapper||'duckJSLog');if(wrapper){wrapper.getElementsByTagName('div')[1].innerHTML+=content+'<br \/>';wrapper.style.display!='block'&&(wrapper.style.display='block')}}}});duckJS.use=function(ids,callback){ids=typeof ids==='string'?[ids]:ids;var modNames=[],modUrls=[],queue;duckModule.each(ids,function(id){var parseResult=duckModule.parseModById(id),modName=parseResult[0],modUrl=parseResult[1];modNames.push(modName);modUrls.push(modUrl)});queue=modNames.join('__')+'__duckJS__queue';QueueCache[queue]={names:modNames,markNames:modNames.slice(),urls:modUrls,callback:callback};useExecuteOnce&&duckJS._load(duckModule.getFirstItem(QueueCache));return duckJS};duckJS._load=function(queue){var data=QueueCache[queue],markNames=data.markNames,modNames=data.names,modUrls=data.urls,module=duckJS.module,modName=modNames.shift(),modUrl=modUrls.shift(),mod=module[modName]||(module[modName]={}),STATUS=duckJS.STATUS,label;onLoadingModName=modName;var complete=function(){if(modNames.length)return duckJS._load(queue);var exports=duckModule.getModExports(markNames);if(data.callback){data.callback.apply(null,exports)};delete QueueCache[queue];duckModule.getFirstItem(QueueCache)&&duckJS._load(duckModule.getFirstItem(QueueCache))};if(mod.status&&mod.status>STATUS.FETCHING){mod.toDepListBack&&duckModule.fireFactoryBack(mod);return complete()};if(!/\.css$/.test(modUrl)){label=document.createElement('script');label.src=modUrl;label.type='text/javascript'}else{label=document.createElement('link');label.type='text/css';label.setAttribute('rel','stylesheet');label.setAttribute('href',modUrl)};label.setAttribute('charset',duckJS.global.charset);label.onload=label.onreadystatechange=label.onerror=function(){if(this.readyState&&!/^complete|loaded$/.test(this.readyState))return;label.onload=label.onreadystatechange=label.onerror=null;!this.getAttribute('rel')&&head.removeChild(label);label=null;complete()};mod.status=STATUS.FETCHING;mod.queue=queue;head.appendChild(label);useExecuteOnce=false};window.define=function(deps,factory){var module=duckJS.module,loadingModName=onLoadingModName,mod=module[loadingModName],toDepList=mod.toDepList,queue=QueueCache[mod.queue],queueNames=queue.names,queueUrls=queue.urls,STATUS=duckJS.STATUS,dep,lastDepMod,parseResult,depModName,depModUrl,depMod,isLast;if(typeof deps==='function'){factory=deps;deps=null}else if(typeof deps==='string'){deps=[deps]}else if(deps.constructor==Object){mod.exports=deps;mod.status=STATUS.COMPILIED;return};mod.deps=[];if(deps&&deps.length){for(var len=deps.length,i=len-1;i>=0;i--){dep=deps[i];parseResult=duckModule.parseModById(dep);depModName=parseResult[0];depModUrl=parseResult[1];mod.deps.unshift(depModName);depMod=module[depModName]||(module[depModName]={});if(depMod.status>STATUS.FETCHING){deps.splice(i,1)}else{if(!lastDepMod){lastDepMod=depMod};isLast=depMod.isLast||(depMod.isLast=[]);isLast.unshift(i===len-1);queueNames.unshift(depModName);queueUrls.unshift(depModUrl)}};if(deps.length){if(!lastDepMod.toDepList){lastDepMod.toDepList=toDepList||[];lastDepMod.toDepList.unshift({name:loadingModName,factory:factory});mod.status=STATUS.READY}else{lastDepMod.toDepListBack=lastDepMod.toDepListBack||lastDepMod.toDepList.slice();if(toDepList){lastDepMod.toDepListBack=toDepList.concat(lastDepMod.toDepListBack)};lastDepMod.toDepListBack.unshift({name:loadingModName,factory:factory});mod.status=STATUS.READY}}};if(!deps||!deps.length){mod.status=STATUS.READY;var exports=duckModule.getModExports(mod.deps);mod.status=STATUS.COMPILING;mod.exports=factory.apply(null,exports);mod.status=STATUS.COMPILIED;if(mod.toDepListBack){duckModule.fireFactoryBack(mod)}else{duckModule.fireFactory(mod)}};if(mod.toDepList)delete mod.toDepList};var duckModule={parseModById:function(id){var base=duckJS.global.base,alias=duckJS.global.alias,markCache=duckJS.markCache,rHttpMod=/[^\w-]/g,rparam=/\?.*$/,rjs=/\.js$/,rcss=/\.css$/,rdeal=rjs,cid=id,name,url;if(markCache[id]){return[markCache[id].name,markCache[id].url]};if(alias[id]){id=alias[id]};if(rcss.test(id))rdeal=rcss;if(/^http|file/.test(id)){url=id}else{if(!rjs.test(id)&&!rcss.test(id))id+='.js';if(/^\.\./.test(id)){for(url=base+id;/[^\s]+\/\.\./.test(url);url=url.replace(/[^\/]+\/\.\.\//g,'')){}}else if(id.charAt(0)=='/'){url=rootPath+id}else{url=base+id}};name=url.replace(rdeal,'').replace(rHttpMod,'').replace(rparam,'');markCache[cid]={name:name,url:url};return[name,url]},fireFactory:function(depMod){var module=duckJS.module,toDepList=depMod.toDepList,STATUS=duckJS.STATUS,exports,mod,name,factory,depExports;if(toDepList){duckModule.each(toDepList,function(item){name=item.name,factory=item.factory,mod=module[name];depExports=duckModule.getModExports(mod.deps);mod.status=STATUS.COMPILING;exports=factory.apply(null,depExports);mod.exports=exports;mod.status=STATUS.COMPILIED})}},fireFactoryBack:function(depMod){if(!depMod.isLast.shift())return;var module=duckJS.module,toDepListBack=depMod.toDepListBack,toDepListBackItem=toDepListBack.shift(),STATUS=duckJS.STATUS,exports,mod,name,factory,depExports;if(toDepListBackItem){name=toDepListBackItem.name,factory=toDepListBackItem.factory,mod=module[name];depExports=duckModule.getModExports(mod.deps);mod.status=STATUS.COMPILING;exports=factory.apply(null,depExports);mod.exports=exports;mod.status=STATUS.COMPILIED}},getModExports:function(modNames){var module=duckJS.module,res=[],len=modNames.length;for(var i=0;i<len;i++){var modName=modNames[i],exports=module[modName].exports;res.push(exports)};return res},parsePath:function(path,relativePath){var res;if(/^http/.test(path)){res=path.substring(0,path.lastIndexOf('/'))+'/'}else if(/^\.\.\//.test(path)){for(res=relativePath+path;/[^\s]+\/\.\./.test(res);res=res.replace(/[^\/]+\/\.\.\//g,''));res=res.substring(0,res.lastIndexOf('/'))+'/'}else{res=path.charAt(0)=='/'?(rootPath+path):(relativePath+path);res=res.substring(0,res.lastIndexOf('/'))+'/'};return res},makeArray:function(likeArray){var result=[],len=likeArray.length,i;for(i=len-1;i>=0;i--){result.unshift(likeArray[i])};return result},each:function(target,callback){var len=target.length;if(len!==undefined){for(var i=0;i<len;i++){var cur=target[i];if(callback.call(cur,cur,i)===false)break}}else{for(var key in target){var cur=target[key];if(callback.call(cur,cur,key)===false)break}}},getFirstItem:function(obj){for(var key in obj){return key};return false}};window.D=window.duckJS=duckJS;!function(script){var lastScript=script[script.length-1],jsPath=lastScript.getAttribute('src'),pageUrl=document.URL.replace(/#.*/g,'').replace(/\\/g,'/'),dataMain=lastScript.getAttribute('data-main');if(pageUrl.lastIndexOf('/',7)!=-1){pagePath=pageUrl.substring(0,pageUrl.lastIndexOf('/'))+'/';rootPath=pageUrl.substring(0,pageUrl.indexOf('/',7))}else{pagePath=pageUrl+'/';rootPath=pageUrl};duckJS.global.base=duckModule.parsePath(jsPath,pagePath);dataMain&&duckJS.use(dataMain.split(/\s*,\s*/g))}(document.getElementsByTagName('script'))}(this,this.document,undefined);